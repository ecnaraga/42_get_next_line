int	ft_present_char(char *buffer) => protegee
 retour i : index du \n dans le buffer
 retour - 1 : pas de \n dans le buffer
              ou pas de buffer existant

int	ft_read_fd(char *buffer, int fd)
 appel read en boucle jusqu a ce au elle trouve un \n ou qu elle arrive a la fin du fd
 retour i : 
    i >= 0 => index du \n dans le buffer
    i = - 1 : pas de \n dans le buffer

char	*ft_new_line(char *sauv, char *line, char *buffer, int i);
 cree la new line et cree la sauv
 appelee soit apres ft_read_fd qui remplit le buffer
 ou apres sauv avec un charactere \n present qu on a stocke dans le buffer
    retour NULL : pas de buffer et pas de sauv > marque fin de lecture du fd 
                  ou allocation non reussie de line ou de sauv
    retour line : renvoie la line cree

char	*ft_get_next_line(int fd)




//utils

size_t	ft_strlen(const char *s)
    retour 0 : si s n existe pas
               si s est vide
